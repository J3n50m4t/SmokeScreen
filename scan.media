#!/bin/sh
###############################################################################
. ${HOME}/.config/SmokeScreen/smokescreen.conf
cache_dir="${HOME}/.cache/pmscan"

# If script is already running; abort.
if pidof -o %PPID -x "$(basename "$0")"; then
    echo "$(date "+%d.%m.%Y %T") INFO: $(basename "$0") already in progress. Aborting."
    exit 3
fi

cur_exec_date=$(echo "$(date +%s)/60"|bc)

if [ ! -d "$cache_dir" ]; then
	mkdir -p "$cache_dir"
fi

if [ ! -f "${cache_dir}/lastrun" ]; then
	echo "$cur_exec_date" > "${cache_dir}/lastrun"
fi

prev_exec_date="$(cat "${cache_dir}/lastrun")"
find_options="-mmin -$(echo "${cur_exec_date}" - "${prev_exec_date}" | bc)"

echo "$cur_exec_date" > "${cache_dir}/lastrun"

# Force a full refresh if a parameter comes in
force=0
if [ ! "${1}" = "" ]; then
	find_options=""
	force=1
fi

# scan movies in to Plex
if [ $force = 1 ] || [ ! $radarrenabled = 1 ]; then
	find ${plex_movie_folder} -mindepth 1 -type d ${find_options} |
	while read -r d; do
		${PLEX_MEDIA_SERVER_HOME}/Plex\ Media\ Scanner -s -r -c ${plex_movie_category} -d "${d}"
	done
fi

# scan TV in to Plex
if [ $force = 1 ] || [ ! $sonarrenabled = 1 ]; then
	find ${plex_shows_folder} -mindepth 2 -type d ${find_options} |
	while read -r d; do
		${PLEX_MEDIA_SERVER_HOME}/Plex\ Media\ Scanner -s -r -c ${plex_shows_category} -d "${d}"
	done
fi

# scan music in to Plex
find ${plex_music_folder} -mindepth 1 -type d ${find_options} |
while read -r d; do
        ${PLEX_MEDIA_SERVER_HOME}/Plex\ Media\ Scanner -s -r -c ${plex_music_category} -d "${d}"
done

echo "$(date "+%d.%m.%Y %T") INFO: Plex Scan Complete"
echo ""

if [ "${sonarrenabled}" = "1" ] || [ "${radarrenabled}" = "1" ]; then
	echo "$(date "+%d.%m.%Y %T") INFO: Starting Cache Sync..."
	echo "$(date "+%d.%m.%Y %T") INFO: Deleting cache files for non-existent media files"
	find "${localcache}" -type f |
	while read n; do
	        # Figure out the path to the actual media file
	        mediafile="${mediadir}${n#${localcache}}"
	        if [ ! -f "${mediafile}" ]; then
	                echo "$(date "+%d.%m.%Y %T") INFO: No media file exists for ${n}, removing from cache"
	                rm "${n}"
	        fi
	done

	if [ "${radarrenabled}" = "1" ]; then
		echo "$(date "+%d.%m.%Y %T") INFO: Creating missing cache files for Movies"
		find "${plex_movie_folder}" -type f -size +25M |
		while read n; do
			# Figure out the path to the cache version of this file
			cachefile="${localcache}${n#${mediadir}}"
			cachedir="$(dirname -- "${cachefile}")"
			if [ ! -f "${cachefile}" ]; then
			        echo "$(date "+%d.%m.%Y %T") INFO: Creating cache file: ${cachefile}"
			        mkdir -p "${cachedir}"
			        touch "${cachefile}"
			fi
		done
	fi

	if [ "${sonarrenabled}" = "1" ]; then
		echo "$(date "+%d.%m.%Y %T") INFO: Creating missing cache files for TV shows"
		find "${plex_shows_folder}" -type f -size +25M |
		while read n; do
			# Figure out the path to the cache version of this file
			cachefile="${localcache}${n#${mediadir}}"
			cachedir="$(dirname -- "${cachefile}")"
			if [ ! -f "${cachefile}" ]; then
			        echo "$(date "+%d.%m.%Y %T") INFO: Creating cache file: ${cachefile}"
			        mkdir -p "${cachedir}"
			        touch "${cachefile}"
			fi
		done
	fi

	echo "$(date "+%d.%m.%Y %T") INFO: Completed Cache Sync..."
fi
